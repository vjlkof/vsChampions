{"version":3,"sources":["Component/Card.js","Component/CardList.js","Component/Scroll.js","Component/Fight.js","Component/PlayAgain.js","Component/SearchSelectChamp.js","Component/ErrorBoundry.js","Container/App.js","serviceWorker.js","index.js"],"names":["Card","id","name","title","ready","energy","className","src","CardList","champs","map","item","i","key","Scroll","props","style","overflowY","border","height","children","Fight","ready1","ready2","figthing","console","log","disabled","onClick","PlayAgain","restart","SearchSelectChamp","searchChange","message","fighting","placeholder","isSearchable","isDisabled","onChange","getOptionLabel","option","options","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSelectChamp1","event","selectChamp1","champReady1","energy1","onSelectChamp2","selectChamp2","champReady2","energy2","onFighting","rndNum","Math","random","champWon","onRestart","fetch","then","response","json","users","Object","values","data","filterChamps1","filter","champ","toLowerCase","includes","filterChamps2","length","toUpperCase","StrictMode","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","registration","unregister","catch"],"mappings":"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","file":"static/js/main.27edae83.chunk.js","sourcesContent":["import React from 'react';\n\n function Card ({id,name,title,ready,energy}) {\n      return (\n      <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 measure-narrow'>\n        <img src={`http://ddragon.leagueoflegends.com/cdn/img/champion/splash/${id}_0.jpg?`}></img>\n        <div>\n          <h2>{name}</h2>\n          <p>{title}</p>\n          {ready?<h2>{energy}%</h2> : null}\n        </div>\n      </div>\n    );\n}\n\nexport default Card;\n","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nfunction CardList ({champs}) {\r\n    return (\r\n    <div>\r\n      {\r\n        champs.map((item,i)=>{\r\n          return(\r\n            <Card \r\n              key={champs[i].key}\r\n              id={champs[i].id}\r\n              name={champs[i].name}\r\n              title={champs[i].title}\r\n            />\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","import React, { Children } from 'react';\r\n\r\nfunction Scroll (props) {\r\n  return (\r\n    <div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n      { props.children }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;\r\n","import React from 'react';\r\nimport 'tachyons';\r\n\r\n\r\nfunction Fight ({ready1, ready2,figthing}) {\r\n  console.log('entro a figth')\r\n  console.log(ready1)\r\n  console.log(ready2)\r\n  if (ready1 && ready2){\r\n    return (    \r\n    <div>\r\n      <button className='b--white-40 br4 grow bw2 white-80 pa4 hover-bg-near-black bg-dark-red' disabled={false} onClick={figthing}>\r\n        Fight\r\n      </button>\r\n    </div>\r\n    )\r\n  } else{\r\n    return (\r\n    <div>\r\n      <button className='b--gray bg-gray br4 white-80 pa4' disabled={true}>\r\n        Fight\r\n      </button>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Fight;","import React from 'react';\r\nimport 'tachyons';\r\n\r\n\r\nfunction PlayAgain ({restart}) {\r\n  return (    \r\n  <div>\r\n    <button className='b--white-40 br4 grow bw2 white-80 pa4 hover-bg-near-black bg-dark-red' disabled={false} onClick={restart}>\r\n      PlayAgain\r\n    </button>\r\n  </div>\r\n    )\r\n  }\r\n\r\nexport default PlayAgain;","import React from 'react';\r\nimport Select from 'react-select';\r\n\r\n\r\nfunction SearchSelectChamp ({champs, searchChange, message,ready1, ready2}) {\r\n  console.log(\"Data de champs\");\r\n  console.log(champs);\r\n  let fighting = false;\r\n  if (ready1 && ready2){\r\n    fighting = true\r\n  }\r\n  console.log(\"data fighting:\" + fighting)\r\n  return (\r\n    <div>\r\n      <h3>{message}</h3>\r\n      <Select\r\n        placeholder={message}\r\n        isSearchable={true}\r\n        isDisabled={fighting}\r\n        onChange={searchChange}\r\n        getOptionLabel={(option) => option.id}\r\n        options={champs}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchSelectChamp;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      hasError : false\r\n    }\r\n  }\r\n\r\n  componentDidCatch (error, info) {\r\n      this.setState({hasError: true})\r\n  }\r\n\r\n  render () {\r\n    if (this.state.hasError) {\r\n      return <h1>Oooops. That is not good</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n} \r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport CardList from '../Component/CardList.js';\nimport Card from '../Component/Card.js';\nimport Scroll from '../Component/Scroll.js';\nimport Fight from '../Component/Fight.js';\nimport PlayAgain from '../Component/PlayAgain.js';\nimport SearchSelectChamp from '../Component/SearchSelectChamp.js';\nimport ErrorBoundry from '../Component/ErrorBoundry.js';\nimport 'tachyons';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor (){\n    super()\n    this.state ={  \n      champs: [],\n      selectChamp1: '',\n      selectChamp2: '',\n      champReady1: false,\n      champReady2: false,\n      energy1: 100,\n      energy2: 100,\n      champWon: ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://ddragon.leagueoflegends.com/cdn/10.22.1/data/en_US/champion.json')\n    .then(response => response.json())\n    .then(users => this.setState({ champs : Object.values(users.data)}));\n  }\n\n  onSelectChamp1 = (event) => {\n    this.setState({selectChamp1: event.id})\n    this.setState({champReady1: true})\n    console.log(\"ChampReady1: \" + this.state.champReady1)\n    console.log(\"energy1: \" + this.state.energy1)\n  }\n  onSelectChamp2 = (event) => {\n    this.setState({selectChamp2: event.id}) \n    this.setState({champReady2: true})\n    console.log(\"ChampReady2: \" + this.state.champReady2)\n    console.log(\"energy2: \" + this.state.energy2)\n  }\n\n  onFighting = ()=>{\n    let rndNum = Math.random(10) * 10;\n    console.log(rndNum);\n    (rndNum > 5) ? this.setState({energy1: this.state.energy1 - 10}):\n                   this.setState({energy2: this.state.energy2 - 10});\n    if (this.state.energy1 <= 0){\n      this.setState({champWon: this.state.selectChamp2});\n    }\n    if (this.state.energy2 <= 0){\n      this.setState({champWon: this.state.selectChamp1});\n    }\n  }\n\n  onRestart = () =>{\n    this.setState({champs: [] });\n    this.setState({selectChamp1: ''});\n    this.setState({selectChamp2: ''});\n    this.setState({champReady1: false});\n    this.setState({champReady2: false});\n    this.setState({energy1: 100});\n    this.setState({energy2: 100});\n    this.setState({champWon: ''});\n    fetch('https://ddragon.leagueoflegends.com/cdn/10.22.1/data/en_US/champion.json')\n    .then(response => response.json())\n    .then(users => this.setState({ champs : Object.values(users.data)}));\n  }\n\n  render() {\n    const {champs, selectChamp1, selectChamp2,champReady1,champReady2,energy1,energy2,champWon} = this.state;\n    const filterChamps1 = champs.filter(champ =>{\n    return champ.name.toLowerCase().includes(selectChamp1.toLowerCase())   \n    })\n    const filterChamps2 = champs.filter(champ =>{\n    return champ.name.toLowerCase().includes(selectChamp2.toLowerCase())   \n    })\n    \n    if (champs.length === 0) {\n      return <h1 className='f1'>Loading</h1>\n    }else if (champWon !== ''){\n       return (\n        <div className='tc'>\n          <h1 className='f1'>VsChampions</h1>\n          <h2 className='f1'>{champWon.toUpperCase()} WON</h2>\n          <Card key={champWon} id={champWon} name={champWon}/>\n          <PlayAgain restart={this.onRestart}/>\n        </div>\n       )}\n      else{\n      return(\n       <div>\n         <React.StrictMode>\n           <h1 className='f1 tc'>VsChampions</h1>\n           <div className='flex items-center'>\n             <div className='tc w-40 pa3 mr2'>\n               <SearchSelectChamp champs={champs} searchChange={this.onSelectChamp1} message={'Select champion 1'} ready1={champReady1} ready2={champReady2}/>\n               <Scroll className='tc'>\n                 <ErrorBoundry>\n                   {!(champReady1) ? <CardList champs= {filterChamps1}/> : <Card key={selectChamp1} id={selectChamp1} name={selectChamp1} ready={champReady1} energy={energy1}/>}\n                 </ErrorBoundry>\n               </Scroll>\n             </div>\n             <div className='tc w-20 pa3 mr2'>\n               <Fight ready1={champReady1} ready2={champReady2} figthing={this.onFighting}/>\n             </div>\n               <div className='tc w-40 pa3 mr2'>\n                 <SearchSelectChamp champs={champs} searchChange={this.onSelectChamp2} message={'Select champion 2'} ready1={champReady1} ready2={champReady2}/>\n                 <Scroll className='tc'>\n                   <ErrorBoundry>\n                   {!(champReady2) ? <CardList champs= {filterChamps2}/> : <Card key={selectChamp2} id={selectChamp2} name={selectChamp2} ready={champReady2} energy={energy2}/>}\n                   </ErrorBoundry>\n                 </Scroll>\n               </div>\n             </div>\n         </React.StrictMode>\n       </div>\n      );\n    }\n  }\n}\n   \n  export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Container/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App/>,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}